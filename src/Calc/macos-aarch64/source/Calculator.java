/* autogenerated by Processing revision 1286 on 2025-10-14 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Calculator extends PApplet {

// William Watabe | September 25 2025 | Calculator Project
Button[] buttons = new Button[12];
Button[] numButtons = new Button[10];
float l, r, result;
boolean left;
String dVal;
char op;

 public void setup() {
  /* size commented out by preprocessor */;
  background(0);
  left = true;
  l = 0;
  r = 0;
  result = 0;
  dVal = "0";
  op = ' ';
  buttons[0] = new Button(70, 90, 120, 40, 'C', 0xFFFF9A15, 0xFFF5CCA1);
  buttons[1] = new Button(170, 90, 54, 40, 'π', 0xFFFF9A15, 0xFFF5CCA1);
  buttons[2] = new Button(38, 140, 54, 40, '²', 0xFFFF9A15, 0xFFF5CCA1);
  buttons[3] = new Button(104, 140, 54, 40, '√', 0xFFFF9A15, 0xFFF5CCA1);
  buttons[4] = new Button(170, 140, 54, 40, '^', 0xFFFF9A15, 0xFFF5CCA1);
  buttons[5] = new Button(236, 90, 54, 40, '+', 0xFFFF9A15, 0xFFF5CCA1);
  numButtons[7] = new Button(38, 190, 54, 40, '7', 0xFF0B157C, 0xFF817FBC);
  numButtons[8] = new Button(104, 190, 54, 40, '8', 0xFF0B157C, 0xFF817FBC);
  numButtons[9] = new Button(170, 190, 54, 40, '9', 0xFF0B157C, 0xFF817FBC);
  buttons[6] = new Button(236, 140, 54, 40, '-', 0xFFFF9A15, 0xFFF5CCA1);
  numButtons[4] = new Button(38, 240, 54, 40, '4', 0xFF0B157C, 0xFF817FBC);
  numButtons[5] = new Button(104, 240, 54, 40, '5', 0xFF0B157C, 0xFF817FBC);
  numButtons[6] = new Button(170, 240, 54, 40, '6', 0xFF0B157C, 0xFF817FBC);
  buttons[7] = new Button(236, 190, 54, 40, 'x', 0xFFFF9A15, 0xFFF5CCA1);
  numButtons[1] = new Button(38, 290, 54, 40, '1', 0xFF0B157C, 0xFF817FBC);
  numButtons[2] = new Button(104, 290, 54, 40, '2', 0xFF0B157C, 0xFF817FBC);
  numButtons[3] = new Button(170, 290, 54, 40, '3', 0xFF0B157C, 0xFF817FBC);
  buttons[8] = new Button(236, 240, 54, 40, '÷', 0xFFFF9A15, 0xFFF5CCA1);
  numButtons[0] = new Button(38, 340, 54, 40, '0', 0xFF0B157C, 0xFF817FBC);
  buttons[9] = new Button(104, 340, 54, 40, '.', 0xFF0B157C, 0xFF817FBC);
  buttons[10] = new Button(170, 340, 54, 40, '±', 0xFFFF9A15, 0xFFF5CCA1);
  buttons[11] = new Button(236, 315, 54, 90, '=', 0xFFFF9A15, 0xFFF5CCA1);
}

 public void draw() {
  background(0);
  for (int i=0; i<buttons.length; i++) {
    buttons[i].display();
    buttons[i].hover(mouseX, mouseY);
  }
  for (int i=0; i<numButtons.length; i++) {
    numButtons[i].display();
    numButtons[i].hover(mouseX, mouseY);
  }
  updateDisplay();
}

 public void mousePressed() {
  //Not Number Buttons
  for (int i = 0; i<buttons.length; i++) {
    if (buttons[i].over && buttons[i].val == '+') {
      dVal = "0";
      left = false;
      op = '+';
    } else if (buttons[i].over && buttons[i].val == '=') {
      performCalculation();
    } else if (buttons[i].over && buttons[i].val == '.') {
      if (dVal.contains(".") == false) {
        dVal += ".";
      }
    } else if (buttons[i].over && buttons[i].val == '^') {
      dVal = "0";
      left = false;
      op = '^';
    } else if (buttons[i].over && buttons[i].val == '±') {
      if (left) {
        l = l*=-1;
        dVal = str(l);
      } else {
        r*=-1;
        dVal = str(r);
      }
    } else if (buttons[i].over && buttons[i].val == '√') {
      if (left) {
        l = sqrt(l);
        dVal = str(l);
      } else {
        r = sqrt(r);
        dVal = str(r);
      }
    } else if (buttons[i].over && buttons[i].val == 'π') {
      if (left) {
        l = PI;
        dVal = str(l);
      } else {
        r = PI;
        dVal = str(r);
      }
    } else if (buttons[i].over && buttons[i].val == '²') {
      if (left) {
        l = sq(l);
        dVal = str(l);
      } else {
        r = sq(r);
        dVal = str(r);
      }
    } else if (buttons[i].over && buttons[i].val == '-') {
      dVal = "0";
      left = false;
      op = '-';
    } else if (buttons[i].over && buttons[i].val == 'x') {
      dVal = "0";
      left = false;
      op = 'x';
    } else if (buttons[i].over && buttons[i].val == '÷') {
      dVal = "0.0";
      left = false;
      op = '÷';
    } else if (buttons[i].over && buttons[i].val == 'C') {
      left = true;
      l = 0;
      r = 0;
      result = 0;
      dVal = "0";
      op = ' ';
    }
  }


  // All Number Buttons
  for (int i = 0; i<numButtons.length; i++) {
    if (dVal.length()<16) {
      if (numButtons[i].over && left) {
        if (dVal.equals("0")) {
          dVal = str(numButtons[i].val);
          l = PApplet.parseFloat(dVal);
        } else {
          dVal += str(numButtons[i].val);
          l = PApplet.parseFloat(dVal);
        }
      } else if (numButtons[i].over && !left) {
        if (dVal.equals("0")) {
          dVal = str(numButtons[i].val);
          r = PApplet.parseFloat(dVal);
        } else {
          dVal += str(numButtons[i].val);
          r = PApplet.parseFloat(dVal);
        }
      }
    }
  }
  println("L:" + l);
  println("R:" + r);
  println("Result:" + result);
  println("Op:" + op);
  println("Left:" + left);
}

 public void updateDisplay() {
  rectMode(CORNER);
  rect(10, 10, 254, 50, 5);
  textSize(36);
  fill(0);
  textAlign(RIGHT);
  if (dVal.length()>13) {
    textSize(30);
  } else if (dVal.length()>16) {
    textSize(20);
  }
  text(dVal, width-20, 45);
}

 public void performCalculation() {
  if (op == ('+')) {
    result = l + r;
  } else if (op == ('-')) {
    result = l - r;
  } else if (op == ('x')) {
    result = l * r;
  } else if (op == ('÷')) {
    result = l / r;
  } else if (op == ('^')) {
    result = pow(l, r);
  }
  dVal = str(result);
}
class Button {
  // Member Variables
  int x, y, w, h;
  char val;
  boolean over;
  int c1, c2;

  // Constructor
  Button(int x, int y, int w, int h, char val, int c1, int c2) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.val = val;
    over = false;
    this.c1 = c1;
    this.c2 = c2;
  }

  // Member Methods
   public void display() {
    // Rectangle Properties
    rectMode(CENTER);
    if (over == true) {
      fill(c2);
    } else {
      fill(c1);
    }
    strokeWeight(2);
    stroke(255);
    rect(x, y, w, h, 4);

    // Text Properties
    fill(255);
    textAlign(CENTER, CENTER);
    textSize(25);
    text(val, x, y);
  }

   public boolean hover(int tempX, int tempY) {
    if (x>tempX - w/2 && x<tempX + w/2 && y>tempY - h/2 && y<tempY + h/2) {
      over = true;
      return true;
    } else {
      over = false;
      return false;
    }
  }
}


  public void settings() { size(274, 370); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Calculator" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
